{"ast":null,"code":"var _jsxFileName = \"/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/finalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinalPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    section1Values,\n    section2Value,\n    section3Value\n  } = location.state;\n\n  // State to store the data fetched from the server\n  const [queryResults, setQueryResults] = useState(null);\n  useEffect(() => {\n    if (!section2Value) return; // Don't fetch if metric is not selected\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/query-bigquery\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            dimensions: section1Values,\n            // Already an array\n            metric: section2Value,\n            refreshTime: section3Value\n          })\n        });\n        const data = await response.json();\n        setQueryResults(data); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        // Handle errors appropriately\n      }\n    };\n    fetchData();\n  }, [section1Values, section2Value, section3Value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Query Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), queryResults && queryResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [section1Values.map(dimension => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: dimension\n          }, dimension, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: section2Value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: queryResults.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [section1Values.map(dimension => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[dimension]\n          }, `${rowIndex}-${dimension}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[section2Value]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: queryResults ? \"No data found.\" : \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FinalPage, \"C9jpC6gJRCb2Ig4CC+5uankEeXg=\", false, function () {\n  return [useLocation];\n});\n_c = FinalPage;\nexport default FinalPage;\nvar _c;\n$RefreshReg$(_c, \"FinalPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","FinalPage","_s","location","section1Values","section2Value","section3Value","state","queryResults","setQueryResults","fetchData","response","fetch","method","headers","body","JSON","stringify","dimensions","metric","refreshTime","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dimension","row","rowIndex","_c","$RefreshReg$"],"sources":["/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/finalPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst FinalPage = () => {\n  const location = useLocation();\n  const { section1Values, section2Value, section3Value } = location.state;\n\n  // State to store the data fetched from the server\n  const [queryResults, setQueryResults] = useState(null);\n\n  useEffect(() => {\n    if (!section2Value) return; // Don't fetch if metric is not selected\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/query-bigquery\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            dimensions: section1Values, // Already an array\n            metric: section2Value,\n            refreshTime: section3Value,\n          }),\n        });\n\n        const data = await response.json();\n        setQueryResults(data); // Update state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        // Handle errors appropriately\n      }\n    };\n\n    fetchData();\n  }, [section1Values, section2Value, section3Value]);\n\n  return (\n    <div>\n      <h1>Final Page</h1>\n\n      <h2>Query Results:</h2>\n\n      {/* Table for displaying results */}\n      {queryResults && queryResults.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              {/* Dynamically create table headers */}\n              {section1Values.map((dimension) => (\n                <th key={dimension}>{dimension}</th>\n              ))}\n              <th>{section2Value}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {queryResults.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {/* Dynamically render table cells */}\n                {section1Values.map((dimension) => (\n                  <td key={`${rowIndex}-${dimension}`}>{row[dimension]}</td>\n                ))}\n                <td>{row[section2Value]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>{queryResults ? \"No data found.\" : \"Loading data...\"}</p>\n      )}\n\n      {/* ... (display other selections as before) ... */}\n    </div>\n  );\n};\n\nexport default FinalPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
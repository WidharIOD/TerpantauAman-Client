{"ast":null,"code":"var _jsxFileName = \"/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/section1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Section1({\n  onDimensionChange\n}) {\n  _s();\n  const [selectedDimensions, setSelectedDimensions] = useState([]);\n  const [customDimension, setCustomDimension] = useState(\"\");\n  const handleDimensionChange = event => {\n    const value = event.target.value;\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      if (selectedDimensions.length >= 3) {\n        alert(\"You can only select a maximum of 3 options\");\n        return;\n      }\n      setSelectedDimensions([...selectedDimensions, value]);\n    } else {\n      setSelectedDimensions(selectedDimensions.filter(item => item !== value));\n    }\n  };\n  const handleCustomDimensionChange = event => {\n    setCustomDimension(event.target.value);\n  };\n  const handleSubmit = () => {\n    // Handle custom dimension and update selectedDimensions\n    if (customDimension.trim() !== \"\") {\n      setSelectedDimensions([...selectedDimensions, customDimension]);\n      setCustomDimension(\"\");\n    }\n\n    // Call the onDimensionChange callback to pass selected dimensions\n    onDimensionChange(selectedDimensions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dimensions-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dimensions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You can choose from the following options, with a maximum of 3 options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dimension-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"Event Name\",\n        onChange: handleDimensionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \" \", \"Event Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"Platform\",\n        onChange: handleDimensionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \" \", \"Platform\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: customDimension,\n        onChange: handleCustomDimensionChange,\n        placeholder: \"Custom Dimension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Section1, \"Y0P3bZoFPoXhYQyZjBR3QZtuDco=\");\n_c = Section1;\nexport default Section1;\nvar _c;\n$RefreshReg$(_c, \"Section1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Section1","onDimensionChange","_s","selectedDimensions","setSelectedDimensions","customDimension","setCustomDimension","handleDimensionChange","event","value","target","isChecked","checked","length","alert","filter","item","handleCustomDimensionChange","handleSubmit","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/section1.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Section1({ onDimensionChange }) {\n  const [selectedDimensions, setSelectedDimensions] = useState([]);\n  const [customDimension, setCustomDimension] = useState(\"\");\n\n  const handleDimensionChange = (event) => {\n    const value = event.target.value;\n    const isChecked = event.target.checked;\n\n    if (isChecked) {\n      if (selectedDimensions.length >= 3) {\n        alert(\"You can only select a maximum of 3 options\");\n        return;\n      }\n      setSelectedDimensions([...selectedDimensions, value]);\n    } else {\n      setSelectedDimensions(\n        selectedDimensions.filter((item) => item !== value)\n      );\n    }\n  };\n\n  const handleCustomDimensionChange = (event) => {\n    setCustomDimension(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    // Handle custom dimension and update selectedDimensions\n    if (customDimension.trim() !== \"\") {\n      setSelectedDimensions([...selectedDimensions, customDimension]);\n      setCustomDimension(\"\");\n    }\n\n    // Call the onDimensionChange callback to pass selected dimensions\n    onDimensionChange(selectedDimensions);\n  };\n\n  return (\n    <div className=\"dimensions-section\">\n      <h2>Dimensions</h2>\n      <p>\n        You can choose from the following options, with a maximum of 3 options\n      </p>\n      <div className=\"dimension-options\">\n        <input\n          type=\"checkbox\"\n          value=\"Event Name\"\n          onChange={handleDimensionChange}\n        />{\" \"}\n        Event Name\n        <input\n          type=\"checkbox\"\n          value=\"Platform\"\n          onChange={handleDimensionChange}\n        />{\" \"}\n        Platform\n        {/* Add more checkboxes as needed */}\n        <input\n          type=\"text\"\n          value={customDimension}\n          onChange={handleCustomDimensionChange}\n          placeholder=\"Custom Dimension\"\n        />\n      </div>\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n}\n\nexport default Section1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/ConfirmationPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmationPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    section1Values,\n    section2Value,\n    section3Value,\n    userName\n  } = location.state;\n  const navigate = useNavigate();\n  const handleSubmit = async () => {\n    try {\n      // Send data to backend to be saved to GCS\n      const response = await fetch(\"http://localhost:3001/save-to-gcs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(location.state)\n      });\n      const data = await response.json();\n      console.log(data); // Log the response from the server (optional)\n\n      // After saving, you can navigate to the FinalPage or elsewhere\n      navigate(\"/final\", {\n        state: location.state\n      });\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n      // Handle the error (e.g., display an error message to the user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Confirm Your Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dimensions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: section1Values.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Metric: \", section2Value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Refresh Time: \", section3Value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Name: \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Proceed to Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmationPage, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ConfirmationPage;\nexport default ConfirmationPage;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","jsxDEV","_jsxDEV","ConfirmationPage","_s","location","section1Values","section2Value","section3Value","userName","state","navigate","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","onClick","_c","$RefreshReg$"],"sources":["/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/ConfirmationPage.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst ConfirmationPage = () => {\n  const location = useLocation();\n  const { section1Values, section2Value, section3Value, userName } =\n    location.state;\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    try {\n      // Send data to backend to be saved to GCS\n      const response = await fetch(\"http://localhost:3001/save-to-gcs\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(location.state),\n      });\n\n      const data = await response.json();\n      console.log(data); // Log the response from the server (optional)\n\n      // After saving, you can navigate to the FinalPage or elsewhere\n      navigate(\"/final\", { state: location.state });\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n      // Handle the error (e.g., display an error message to the user)\n    }\n  };\n\n  return (\n    <div>\n      <h1>Confirm Your Selections</h1>\n      <h2>Dimensions:</h2>\n      <ul>\n        {section1Values.map((value, index) => (\n          <li key={index}>{value}</li>\n        ))}\n      </ul>\n      <p>Metric: {section2Value}</p>\n      <p>Refresh Time: {section3Value}</p>\n      <p>User Name: {userName}</p>\n      <button onClick={handleSubmit}>Proceed to Results</button>\n    </div>\n  );\n};\n\nexport default ConfirmationPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,cAAc;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAC9DJ,QAAQ,CAACK,KAAK;EAChB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAACK,KAAK;MACrC,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;MAEnB;MACAT,QAAQ,CAAC,QAAQ,EAAE;QAAED,KAAK,EAAEL,QAAQ,CAACK;MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;IACF;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC3B,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MAAAuB,QAAA,EACGnB,cAAc,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/B9B,OAAA;QAAAuB,QAAA,EAAiBM;MAAK,GAAbC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL3B,OAAA;MAAAuB,QAAA,GAAG,UAAQ,EAAClB,aAAa;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B3B,OAAA;MAAAuB,QAAA,GAAG,gBAAc,EAACjB,aAAa;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC3B,OAAA;MAAAuB,QAAA,GAAG,aAAW,EAAChB,QAAQ;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MAAQ+B,OAAO,EAAErB,YAAa;MAAAa,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzCID,gBAAgB;EAAA,QACHJ,WAAW,EAGXC,WAAW;AAAA;AAAAkC,EAAA,GAJxB/B,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/section1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../firebaseConfig\";\n\n// import image1 from './path/to/your/image1.jpg'; // Replace with your image path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section1 = ({\n  onDimensionChange\n}) => {\n  _s();\n  const [selectedDimensions, setSelectedDimensions] = useState([]);\n  const [customDimension, setCustomDimension] = useState(\"\");\n  const location = useLocation();\n  const {\n    dimensions,\n    isEditing\n  } = location.state || {}; // Get data and isEditing flag\n\n  // State to track selected options using checkboxes\n  const [selectedOptions, setSelectedOptions] = useState({\n    event_name: false,\n    platform: false,\n    city: false,\n    pagePath: false,\n    channelGroup: false,\n    sessionSourceMedium: false,\n    customDimensions: false\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isEditing && reportName) {\n      // Fetch data only when editing\n      const fetchData = async () => {\n        try {\n          const docRef = doc(db, \"Live Report\", reportName);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            const reportData = docSnap.data();\n            const firestoreDimensions = reportData.dimensions || [];\n            const initialOptions = {};\n            Object.keys(selectedOptions).forEach(option => {\n              initialOptions[option] = firestoreDimensions.includes(option);\n            });\n            setSelectedOptions(initialOptions);\n          } else {\n            console.log(\"No such document!\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n      fetchData();\n    }\n  }, [isEditing, reportName]);\n\n  // Function to handle checkbox changes\n  const handleCheckboxChange = option => {\n    // Update the state, toggling the selected option\n    setSelectedOptions({\n      ...selectedOptions,\n      // Copy existing options\n      [option]: !selectedOptions[option] // Toggle the specific option\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = () => {\n    // Get an array of selected dimension names (where the value is true)\n    const selected = Object.keys(selectedOptions).filter(option => selectedOptions[option]);\n\n    // Validation: Check if the selection count is within the valid range\n    if (selected.length === 0 || selected.length > 3) {\n      alert(\"Please select 1 to 3 options.\"); // Show an alert if invalid\n    } else {\n      // Navigate to the next section, passing the selected dimensions as an array\n      navigate(\"/section2\", {\n        state: {\n          dimensions: selected\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dimensions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You can choose from the following options, with a maximum of 3 options:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.event_name,\n          onChange: () => handleCheckboxChange(\"event_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \" \", \"Event Name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.platform,\n          onChange: () => handleCheckboxChange(\"platform\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \" \", \"Platform\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.city,\n          onChange: () => handleCheckboxChange(\"city\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \", \"City\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.pagePath,\n          onChange: () => handleCheckboxChange(\"pagePath\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \" \", \"Page Path\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.channelGroup,\n          onChange: () => handleCheckboxChange(\"channelGroup\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), \" \", \"Channel Group\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedOptions.sessionSourceMedium,\n          onChange: () => handleCheckboxChange(\"sessionSourceMedium\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), \" \", \"Session Source/Medium\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Section1, \"sN5QKly1BkfbrtWHznJ1NUXEi7U=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Section1;\nexport default Section1;\nvar _c;\n$RefreshReg$(_c, \"Section1\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","doc","getDoc","db","jsxDEV","_jsxDEV","Section1","onDimensionChange","_s","selectedDimensions","setSelectedDimensions","customDimension","setCustomDimension","location","dimensions","isEditing","state","selectedOptions","setSelectedOptions","event_name","platform","city","pagePath","channelGroup","sessionSourceMedium","customDimensions","navigate","reportName","fetchData","docRef","docSnap","exists","reportData","data","firestoreDimensions","initialOptions","Object","keys","forEach","option","includes","console","log","error","handleCheckboxChange","handleSubmit","selected","filter","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/widhardwiatmoko/Desktop/TerpantauAman/realtime-client/src/components/section1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../firebaseConfig\";\n\n// import image1 from './path/to/your/image1.jpg'; // Replace with your image path\n\nconst Section1 = ({ onDimensionChange }) => {\n  const [selectedDimensions, setSelectedDimensions] = useState([]);\n  const [customDimension, setCustomDimension] = useState(\"\");\n  const location = useLocation();\n\n  const { dimensions, isEditing } = location.state || {}; // Get data and isEditing flag\n\n  // State to track selected options using checkboxes\n  const [selectedOptions, setSelectedOptions] = useState({\n    event_name: false,\n    platform: false,\n    city: false,\n    pagePath: false,\n    channelGroup: false,\n    sessionSourceMedium: false,\n    customDimensions: false,\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isEditing && reportName) {\n      // Fetch data only when editing\n      const fetchData = async () => {\n        try {\n          const docRef = doc(db, \"Live Report\", reportName);\n          const docSnap = await getDoc(docRef);\n\n          if (docSnap.exists()) {\n            const reportData = docSnap.data();\n            const firestoreDimensions = reportData.dimensions || [];\n\n            const initialOptions = {};\n            Object.keys(selectedOptions).forEach((option) => {\n              initialOptions[option] = firestoreDimensions.includes(option);\n            });\n            setSelectedOptions(initialOptions);\n          } else {\n            console.log(\"No such document!\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n\n      fetchData();\n    }\n  }, [isEditing, reportName]);\n\n  // Function to handle checkbox changes\n  const handleCheckboxChange = (option) => {\n    // Update the state, toggling the selected option\n    setSelectedOptions({\n      ...selectedOptions, // Copy existing options\n      [option]: !selectedOptions[option], // Toggle the specific option\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = () => {\n    // Get an array of selected dimension names (where the value is true)\n    const selected = Object.keys(selectedOptions).filter(\n      (option) => selectedOptions[option]\n    );\n\n    // Validation: Check if the selection count is within the valid range\n    if (selected.length === 0 || selected.length > 3) {\n      alert(\"Please select 1 to 3 options.\"); // Show an alert if invalid\n    } else {\n      // Navigate to the next section, passing the selected dimensions as an array\n      navigate(\"/section2\", { state: { dimensions: selected } });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Dimensions</h1>\n      <p>\n        You can choose from the following options, with a maximum of 3 options:\n      </p>\n\n      {/* <img src={image1} alt=\"Image 1\" />  */}\n\n      {/* Checkboxes for dimensions */}\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.event_name}\n            onChange={() => handleCheckboxChange(\"event_name\")}\n          />{\" \"}\n          Event Name\n        </label>\n      </div>\n      <div>\n        {\" \"}\n        {/* Repeat this structure for each dimension */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.platform}\n            onChange={() => handleCheckboxChange(\"platform\")}\n          />{\" \"}\n          Platform\n        </label>\n      </div>\n      <div>\n        {\" \"}\n        {/* Repeat this structure for each dimension */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.city}\n            onChange={() => handleCheckboxChange(\"city\")}\n          />{\" \"}\n          City\n        </label>\n      </div>\n      <div>\n        {\" \"}\n        {/* Repeat this structure for each dimension */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.pagePath}\n            onChange={() => handleCheckboxChange(\"pagePath\")}\n          />{\" \"}\n          Page Path\n        </label>\n      </div>\n      <div>\n        {\" \"}\n        {/* Repeat this structure for each dimension */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.channelGroup}\n            onChange={() => handleCheckboxChange(\"channelGroup\")}\n          />{\" \"}\n          Channel Group\n        </label>\n      </div>\n      <div>\n        {\" \"}\n        {/* Repeat this structure for each dimension */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectedOptions.sessionSourceMedium}\n            onChange={() => handleCheckboxChange(\"sessionSourceMedium\")}\n          />{\" \"}\n          Session Source/Medium\n        </label>\n      </div>\n\n      {/* ...add checkboxes for other dimensions (city, pagePath, etc.) ... */}\n\n      {/* Submit button */}\n      <button onClick={handleSubmit}>Next</button>\n    </div>\n  );\n};\n\nexport default Section1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}